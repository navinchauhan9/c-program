# Armstrong Number in C

This C program checks whether a given number is an Armstrong number. It takes an input from the user, processes it, and then determines if the number is an Armstrong number.

## Armstrong Number

An Armstrong number (also known as a narcissistic number) is a number that is equal to the sum of its own digits each raised to the power of the number of digits. For example, 153 is an Armstrong number because:



## How the Program Works

1. **Input:** The user is prompted to enter a number.
2. **Processing:** The program calculates the sum of the cubes of each digit in the number.
3. **Comparison:** The program checks if the sum is equal to the original number.
4. **Output:** If the sum equals the original number, the program prints that the number is an Armstrong number. Otherwise, it prints that it is not an Armstrong number.
***we use function to perform our program.***
## Code Snippet

```c
#include<stdio.h>

int main() {
    //declaring variables
    int n, og, s = 0, r;
    printf("Enter the number\n"); //asking user to give the input
    scanf("%d", &n); //taking input from the user
    og = n;

    while(n > 0) {
        r = n % 10; // finding the remainder (last digit)
        s = s + (r * r * r); // summing the cubes of digits
        n = n / 10; // removing the last digit
    }

    if (og == s) {
        printf("It's an Armstrong number\n"); // if the sum equals the original number
    } else {
        printf("It's not an Armstrong number\n");
    }

    return 0;
}
